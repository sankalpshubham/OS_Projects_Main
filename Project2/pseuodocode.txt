// ADD THE NEW Semaphore

void customer() {

    wait(postOfficeCapacity)
    enter_Post_Office()
    wait(postalWorkerAvailable)
    identify_Postal_Worker_ID()
    wait(postalWorkerSem[id])
    signal(customerReady)
    wait(thread_communication)
    customer_does_assigned_task()  // customer talks to postal worker. time it needs to sleep for (print done after finishing) (need to include a scale semaphore)
    signal(thread_communication2)
    wait(finished)    
    exit_post_office()
    signal(postOfficeCapacity)

}

void postal_worker() {

    wait(customerReady)
    identify_Customer_Task&ID()
    signal(thread_communication)
    wait(thread_communication2)
    wait(scale)                    // wait on scale ONLY for mailing package & if another postal woker is using it
    do_customer_task()             // sleep for the task time assined (print done after finishing) (need to include the scale semaphore)
    signal(scale)                  // signal scale once finished using it
    signal(finished)
    signal(postalWorkerSem[id])
    signal(postalWorkerAvailable)

}

